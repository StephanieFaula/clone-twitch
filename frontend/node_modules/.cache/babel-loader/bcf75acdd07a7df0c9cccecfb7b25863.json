{"ast":null,"code":"import _regeneratorRuntime from\"/Users/oceane/Documents/Sites/clone-twitch/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/oceane/Documents/Sites/clone-twitch/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/oceane/Documents/Sites/clone-twitch/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Axios from'axios';import{Link}from'react-router-dom';import Config from'../Config';var Games=function Games(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),games=_useState2[0],setGames=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),connexion=_useState4[0],setConnexion=_useState4[1];var oToken=sessionStorage.getItem('theToken');useEffect(function(){//la déclaration async permet d'effectuer des actions de façon asynchrones. Ici, aller chercher des données ET les recevoir en même temps\nvar fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,dataArray,finalArray;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.create({headers:{'Client-ID':Config.clientID,'Authorization':'Bearer '+oToken}}).get('https://api.twitch.tv/helix/games/top');case 2:result=_context.sent;if(result.status===200){setConnexion(true);}else{setConnexion(false);}dataArray=result.data.data;finalArray=dataArray.map(function(game){var newUrl=game.box_art_url.replace(\"{width}\",\"250\").replace(\"{height}\",\"300\");game.box_art_url=newUrl;return game;});setGames(finalArray);case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[oToken]);console.log(connexion);// console.log(games);\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"titreGames\"},\"Jeux les plus populaires\"),connexion&&/*#__PURE__*/React.createElement(\"div\",{className:\"flexAccueil\"},games.map(function(game,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"carteGames\"},/*#__PURE__*/React.createElement(\"img\",{src:game.box_art_url,alt:\"jeu\",className:\"imgCarte\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"cardBodyGames\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"titreCartesGames\"},game.name),/*#__PURE__*/React.createElement(Link,{className:\"lien\",to:{pathname:\"game/\"+game.name}},/*#__PURE__*/React.createElement(\"div\",{className:\"btnCarte\"},\"Regarder \",game.name))));})),!connexion&&/*#__PURE__*/React.createElement(\"div\",{className:\"connexion\"},/*#__PURE__*/React.createElement(\"a\",{href:\"https://id.twitch.tv/oauth2/authorize?client_id=lhvw6vqelrbmgygm5wekb9upiov0pc&redirect_uri=http://localhost:3000&response_type=code&scope=viewing_activity_read\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"button-connexion\"},\"Se connecter\"))));};export default Games;","map":{"version":3,"sources":["/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/Games/index.js"],"names":["React","useState","useEffect","Axios","Link","Config","Games","games","setGames","connexion","setConnexion","oToken","sessionStorage","getItem","fetchData","create","headers","clientID","get","result","status","dataArray","data","finalArray","map","game","newUrl","box_art_url","replace","console","log","index","name","pathname"],"mappings":"2fAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,eAEUL,QAAQ,CAAC,EAAD,CAFlB,wCAETM,KAFS,eAEFC,QAFE,8BAIkBP,QAAQ,CAAC,KAAD,CAJ1B,yCAITQ,SAJS,eAIEC,YAJF,eAMhB,GAAIC,CAAAA,MAAM,CAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAb,CAEAX,SAAS,CAAC,UAAM,CAEhB;AACA,GAAMY,CAAAA,SAAS,0FAAG,yLAEOX,CAAAA,KAAK,CAACY,MAAN,CAAa,CAClCC,OAAO,CAAE,CACL,YAAcX,MAAM,CAACY,QADhB,CAEL,gBAAkB,UAAYN,MAFzB,CADyB,CAAb,EAKlBO,GALkB,CAKd,uCALc,CAFP,QAERC,MAFQ,eASd,GAAGA,MAAM,CAACC,MAAP,GAAkB,GAArB,CAA0B,CACtBV,YAAY,CAAC,IAAD,CAAZ,CACH,CAFD,IAEO,CACHA,YAAY,CAAC,KAAD,CAAZ,CACH,CAEGW,SAfU,CAeEF,MAAM,CAACG,IAAP,CAAYA,IAfd,CAiBVC,UAjBU,CAiBGF,SAAS,CAACG,GAAV,CAAe,SAAAC,IAAI,CAAI,CACpC,GAAIC,CAAAA,MAAM,CAAGD,IAAI,CAACE,WAAL,CACZC,OADY,CACJ,SADI,CACO,KADP,EAEZA,OAFY,CAEJ,UAFI,CAEQ,KAFR,CAAb,CAIAH,IAAI,CAACE,WAAL,CAAmBD,MAAnB,CACA,MAAOD,CAAAA,IAAP,CACH,CAPgB,CAjBH,CA0BdjB,QAAQ,CAACe,UAAD,CAAR,CA1Bc,sDAAH,kBAATT,CAAAA,SAAS,0CAAf,CA6BAA,SAAS,GAER,CAlCQ,CAkCN,CAACH,MAAD,CAlCM,CAAT,CAoCAkB,OAAO,CAACC,GAAR,CAAYrB,SAAZ,EACA;AAEA,mBACI,2BAAK,SAAS,CAAC,EAAf,eACI,0BAAI,SAAS,CAAC,YAAd,6BADJ,CAGKA,SAAS,eACN,2BAAK,SAAS,CAAC,aAAf,EACKF,KAAK,CAACiB,GAAN,CAAU,SAACC,IAAD,CAAOM,KAAP,qBACP,2BAAK,GAAG,CAAEA,KAAV,CAAiB,SAAS,CAAC,YAA3B,eACI,2BAAK,GAAG,CAAEN,IAAI,CAACE,WAAf,CAA4B,GAAG,CAAC,KAAhC,CAAsC,SAAS,CAAC,UAAhD,EADJ,cAEI,2BAAK,SAAS,CAAC,eAAf,eACI,0BAAI,SAAS,CAAC,kBAAd,EAAkCF,IAAI,CAACO,IAAvC,CADJ,cAEI,oBAAC,IAAD,EACA,SAAS,CAAC,MADV,CAEA,EAAE,CAAE,CACJC,QAAQ,CAAE,QAAUR,IAAI,CAACO,IADrB,CAFJ,eAMI,2BAAK,SAAS,CAAC,UAAf,cAAoCP,IAAI,CAACO,IAAzC,CANJ,CAFJ,CAFJ,CADO,EAAV,CADL,CAJR,CAuBK,CAACvB,SAAD,eACG,2BAAK,SAAS,CAAC,WAAf,eACI,yBAAG,IAAI,CAAC,kKAAR,eAA2K,8BAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,kBAAhC,iBAA3K,CADJ,CAxBR,CADJ,CAgCH,CA/ED,CAiFA,cAAeH,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Config from '../Config';\n\nconst Games = () => {\n\n    const [games, setGames] = useState([]);\n\n    const [connexion, setConnexion] = useState(false);\n\n    let oToken = sessionStorage.getItem('theToken');\n\n    useEffect(() => {\n\n    //la déclaration async permet d'effectuer des actions de façon asynchrones. Ici, aller chercher des données ET les recevoir en même temps\n    const fetchData = async () => {\n\n        const result = await Axios.create({\n        headers: {\n            'Client-ID' : Config.clientID,\n            'Authorization' : 'Bearer ' + oToken\n        }\n        }).get('https://api.twitch.tv/helix/games/top');\n\n        if(result.status === 200) {\n            setConnexion(true);\n        } else {\n            setConnexion(false);\n        }\n\n        let dataArray = result.data.data;\n\n        let finalArray = dataArray.map( game => {\n            let newUrl = game.box_art_url\n            .replace(\"{width}\", \"250\")\n            .replace(\"{height}\", \"300\");\n\n            game.box_art_url = newUrl;\n            return game;\n        });\n\n        setGames(finalArray);\n\n    }\n    fetchData();\n\n    }, [oToken])\n\n    console.log(connexion);\n    // console.log(games);\n\n    return(\n        <div className=\"\">\n            <h1 className=\"titreGames\">Jeux les plus populaires</h1>\n\n            {connexion &&\n                <div className=\"flexAccueil\">\n                    {games.map((game, index) => ( \n                        <div key={index} className=\"carteGames\">\n                            <img src={game.box_art_url} alt=\"jeu\" className=\"imgCarte\"/>\n                            <div className=\"cardBodyGames\">\n                                <h5 className=\"titreCartesGames\">{game.name}</h5>\n                                <Link \n                                className=\"lien\"\n                                to={{\n                                pathname: \"game/\" + game.name,\n                                }}\n                                >\n                                    <div className=\"btnCarte\">Regarder {game.name}</div>\n                                </Link>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            }\n            {!connexion &&\n                <div className=\"connexion\">\n                    <a href=\"https://id.twitch.tv/oauth2/authorize?client_id=lhvw6vqelrbmgygm5wekb9upiov0pc&redirect_uri=http://localhost:3000&response_type=code&scope=viewing_activity_read\"><button type=\"button\" className=\"button-connexion\">Se connecter</button></a>\n                </div>\n            }\n        </div>\n    );\n\n}\n\nexport default Games;"]},"metadata":{},"sourceType":"module"}