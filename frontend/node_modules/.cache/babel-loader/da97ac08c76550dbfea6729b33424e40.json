{"ast":null,"code":"var _jsxFileName = \"/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/Live/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactTwitchEmbedVideo from 'react-twitch-embed-video';\nimport { useParams } from 'react-router-dom';\nimport Config from '../Config';\nimport Axios from 'axios';\n\nconst Live = () => {\n  //Le destructuring consiste à assigner des variables provenant d'un objet ou tableau en reposant sur leur structure. Ici slug vaut {slug: PseudoDuJoueur}, on recupère simplement la valeur de la propriété slug (grace aux {} autour de slug) pour avoir UNIQUEMENT la valeur: le slug\n  let {\n    slug\n  } = useParams(); // console.log(slug);\n\n  const [infoStream, setInfoStream] = useState([]);\n  const [infoGame, setInfoGame] = useState([]);\n  const oToken = sessionStorage.getItem('theToken');\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await Axios.create({\n        headers: {\n          'Client-ID': Config.clientID,\n          'Authorization': 'Bearer ' + oToken\n        }\n      }).get(`https://api.twitch.tv/helix/streams?user_login=${slug}`);\n\n      if (result.data.data.length === 0) {\n        setInfoStream(false);\n      } else {\n        let gameID = result.data.data.map(gameid => {\n          return gameid.game_id;\n        });\n        const resultNomGame = await Axios.create({\n          headers: {\n            'Client-ID': Config.clientID,\n            'Authorization': 'Bearer ' + oToken\n          }\n        }).get(`https://api.twitch.tv/helix/games?id=${gameID}`); // console.log(resultNomGame);\n\n        let nomJeu = resultNomGame.data.data.map(gameName => {\n          return gameName.name;\n        });\n        setInfoGame(nomJeu);\n        setInfoStream(result.data.data[0]); // console.log(result);\n      }\n    };\n\n    fetchData();\n  }, [slug]); //&nbsp = espace en html\n\n  return infoStream ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerDecale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactTwitchEmbedVideo, {\n    height: \"754\",\n    width: \"100%\",\n    channel: slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titreStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, infoStream.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"viewer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Viewers : \", infoStream.viewer_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoGame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Streamer : \", infoStream.user_name, \", \\xA0 Langue : \", infoStream.language), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nomJeu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Jeu : \", infoGame))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerDecale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactTwitchEmbedVideo, {\n    height: \"754\",\n    width: \"100%\",\n    channel: slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titreStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Le streamer est offline !\")));\n};\n\nexport default Live;","map":{"version":3,"sources":["/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/Live/index.js"],"names":["React","useState","useEffect","ReactTwitchEmbedVideo","useParams","Config","Axios","Live","slug","infoStream","setInfoStream","infoGame","setInfoGame","oToken","sessionStorage","getItem","fetchData","result","create","headers","clientID","get","data","length","gameID","map","gameid","game_id","resultNomGame","nomJeu","gameName","name","title","viewer_count","user_name","language"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactTwitchEmbedVideo from 'react-twitch-embed-video';\nimport { useParams } from 'react-router-dom';\nimport Config from '../Config';\nimport Axios from 'axios';\n\nconst Live = () => {\n\n    //Le destructuring consiste à assigner des variables provenant d'un objet ou tableau en reposant sur leur structure. Ici slug vaut {slug: PseudoDuJoueur}, on recupère simplement la valeur de la propriété slug (grace aux {} autour de slug) pour avoir UNIQUEMENT la valeur: le slug\n    let {slug} = useParams();\n    // console.log(slug);\n\n    const [infoStream, setInfoStream] = useState([]);\n    const [infoGame, setInfoGame] = useState([]);\n\n    const oToken = sessionStorage.getItem('theToken');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await Axios.create({\n                headers: {\n                    'Client-ID' : Config.clientID,\n                    'Authorization' : 'Bearer ' + oToken\n                }\n            }).get(`https://api.twitch.tv/helix/streams?user_login=${slug}`);\n\n            if(result.data.data.length === 0) {\n                setInfoStream(false)\n            } else {\n                let gameID = result.data.data.map( gameid => {\n                    return gameid.game_id\n                });\n                const resultNomGame = await Axios.create({\n                headers: {\n                    'Client-ID' : Config.clientID,\n                    'Authorization' : 'Bearer ' + oToken\n                }\n                }).get(`https://api.twitch.tv/helix/games?id=${gameID}`);\n                // console.log(resultNomGame);\n                let nomJeu = resultNomGame.data.data.map(gameName => {\n                    return gameName.name\n                });\n\n                setInfoGame(nomJeu);\n                setInfoStream(result.data.data[0])\n                // console.log(result);\n            }\n        }\n\n        fetchData();\n    }, [slug])\n\n    //&nbsp = espace en html\n    return(\n        infoStream ?\n            <div className=\"containerDecale\">\n                <ReactTwitchEmbedVideo height=\"754\" width=\"100%\" channel={slug}/>\n                <div className=\"contInfo\">\n                    <div className=\"titreStream\">{infoStream.title}</div>\n                    <div className=\"viewer\">Viewers : {infoStream.viewer_count}</div>\n                    <div className=\"infoGame\">Streamer : {infoStream.user_name}, &nbsp; Langue : {infoStream.language}</div>\n                    <div className=\"nomJeu\">Jeu : {infoGame}</div>\n                </div>\n            </div>\n        :\n            <div className=\"containerDecale\">\n                <ReactTwitchEmbedVideo height=\"754\" width=\"100%\" channel={slug}/>\n                <div className=\"contInfo\">\n                    <div className=\"titreStream\">Le streamer est offline !</div>\n                </div>\n            </div>\n\n    );\n}\n\nexport default Live;"]},"metadata":{},"sourceType":"module"}