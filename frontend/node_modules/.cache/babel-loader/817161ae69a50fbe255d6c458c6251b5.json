{"ast":null,"code":"import _regeneratorRuntime from\"/Users/oceane/Documents/Sites/clone-twitch/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/oceane/Documents/Sites/clone-twitch/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/oceane/Documents/Sites/clone-twitch/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import Axios from'axios';import Config from'../Config';import{Link}from'react-router-dom';var TopStreams=function TopStreams(){var oToken=sessionStorage.getItem('theToken');var _useState=useState([]),_useState2=_slicedToArray(_useState,2),channels=_useState2[0],setChannels=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,dataArray,gameIDs,userIDs,baseUrlGames,baseUrlUsers,queryParamsGame,queryParamsUsers,urlFinalGames,urlFinalUsers,gamesNames,getUsers,gamesNameArray,userArray,finalArray;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.create({headers:{'Client-ID':Config.clientID,'Authorization':'Bearer '+oToken}}).get('https://api.twitch.tv/helix/streams');case 2:result=_context.sent;dataArray=result.data.data;// console.log(dataArray);\ngameIDs=dataArray.map(function(stream){return stream.game_id;});userIDs=dataArray.map(function(stream){return stream.user_id;});//Creation des URLs personnalisées\nbaseUrlGames=\"https://api.twitch.tv/helix/games?\";baseUrlUsers=\"https://api.twitch.tv/helix/users?\";queryParamsGame=\"\";queryParamsUsers=\"\";gameIDs.map(function(id){return queryParamsGame=queryParamsGame+\"id=\".concat(id,\"&\");});userIDs.map(function(id){return queryParamsUsers=queryParamsUsers+\"id=\".concat(id,\"&\");});//URL final\nurlFinalGames=baseUrlGames+queryParamsGame;urlFinalUsers=baseUrlUsers+queryParamsUsers;//Appels\n_context.next=16;return Axios.create({headers:{'Client-ID':Config.clientID,'Authorization':'Bearer '+oToken}}).get(urlFinalGames);case 16:gamesNames=_context.sent;_context.next=19;return Axios.create({headers:{'Client-ID':Config.clientID,'Authorization':'Bearer '+oToken}}).get(urlFinalUsers);case 19:getUsers=_context.sent;gamesNameArray=gamesNames.data.data;userArray=getUsers.data.data;// console.log(gamesNameArray, userArray);\n//Création du tableau final\nfinalArray=dataArray.map(function(stream){stream.gameName=\"\";stream.login=\"\";gamesNameArray.forEach(function(name){userArray.forEach(function(user){if(stream.user_id===user.id&&stream.game_id===name.id){stream.gameName=name.name;stream.login=user.login;}});});var newUrl=stream.thumbnail_url.replace('{width}',\"320\").replace('{height}',\"180\");stream.thumbnail_url=newUrl;return stream;});setChannels(finalArray);case 24:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[oToken]);// console.log(channels);\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"titreGames\"},\"Stream les plus populaires\"),/*#__PURE__*/React.createElement(\"div\",{className:\"flexAccueil\"},channels.map(function(channel,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"carteStream\"},/*#__PURE__*/React.createElement(\"img\",{src:channel.thumbnail_url,alt:\"jeu\",className:\"imgCarte\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"cardBodyStream\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"titreCartesStream\"},channel.user_name),/*#__PURE__*/React.createElement(\"p\",{className:\"txtStream viewers\"},\"Viewers : \",channel.viewer_count),/*#__PURE__*/React.createElement(Link,{className:\"lien\",to:{pathname:\"/live/\".concat(channel.login)}},/*#__PURE__*/React.createElement(\"div\",{className:\"btnCarte\"},\"Regarder \",channel.user_name))));})));};export default TopStreams;","map":{"version":3,"sources":["/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/TopStreams/index.js"],"names":["React","useEffect","useState","Axios","Config","Link","TopStreams","oToken","sessionStorage","getItem","channels","setChannels","fetchData","create","headers","clientID","get","result","dataArray","data","gameIDs","map","stream","game_id","userIDs","user_id","baseUrlGames","baseUrlUsers","queryParamsGame","queryParamsUsers","id","urlFinalGames","urlFinalUsers","gamesNames","getUsers","gamesNameArray","userArray","finalArray","gameName","login","forEach","name","user","newUrl","thumbnail_url","replace","channel","index","user_name","viewer_count","pathname"],"mappings":"2fAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAErB,GAAMC,CAAAA,MAAM,CAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAf,CAFqB,cAIWP,QAAQ,CAAC,EAAD,CAJnB,wCAIdQ,QAJc,eAIJC,WAJI,eAMrBV,SAAS,CAAC,UAAM,CACZ,GAAMW,CAAAA,SAAS,0FAAG,6UACOT,CAAAA,KAAK,CAACU,MAAN,CAAa,CAClCC,OAAO,CAAE,CACL,YAAcV,MAAM,CAACW,QADhB,CAEL,gBAAkB,UAAYR,MAFzB,CADyB,CAAb,EAKlBS,GALkB,CAKd,qCALc,CADP,QACRC,MADQ,eAQVC,SARU,CAQED,MAAM,CAACE,IAAP,CAAYA,IARd,CASd;AAEIC,OAXU,CAWAF,SAAS,CAACG,GAAV,CAAe,SAAAC,MAAM,CAAI,CACnC,MAAOA,CAAAA,MAAM,CAACC,OAAd,CACH,CAFa,CAXA,CAeVC,OAfU,CAeAN,SAAS,CAACG,GAAV,CAAe,SAAAC,MAAM,CAAI,CACnC,MAAOA,CAAAA,MAAM,CAACG,OAAd,CACH,CAFa,CAfA,CAmBd;AACIC,YApBU,CAoBK,oCApBL,CAqBVC,YArBU,CAqBK,oCArBL,CAuBVC,eAvBU,CAuBQ,EAvBR,CAwBVC,gBAxBU,CAwBS,EAxBT,CA0BdT,OAAO,CAACC,GAAR,CAAY,SAAAS,EAAE,CAAI,CACd,MAAQF,CAAAA,eAAe,CAAGA,eAAe,cAASE,EAAT,KAAzC,CACH,CAFD,EAGAN,OAAO,CAACH,GAAR,CAAY,SAAAS,EAAE,CAAI,CACd,MAAQD,CAAAA,gBAAgB,CAAGA,gBAAgB,cAASC,EAAT,KAA3C,CACH,CAFD,EAIA;AACIC,aAlCU,CAkCML,YAAY,CAAGE,eAlCrB,CAmCVI,aAnCU,CAmCML,YAAY,CAAGE,gBAnCrB,CAqCd;AArCc,uBAsCS1B,CAAAA,KAAK,CAACU,MAAN,CAAa,CACpCC,OAAO,CAAE,CACL,YAAcV,MAAM,CAACW,QADhB,CAEL,gBAAkB,UAAYR,MAFzB,CAD2B,CAAb,EAKpBS,GALoB,CAKhBe,aALgB,CAtCT,SAsCVE,UAtCU,sCA4CO9B,CAAAA,KAAK,CAACU,MAAN,CAAa,CAClCC,OAAO,CAAE,CACL,YAAcV,MAAM,CAACW,QADhB,CAEL,gBAAkB,UAAYR,MAFzB,CADyB,CAAb,EAKlBS,GALkB,CAKdgB,aALc,CA5CP,SA4CVE,QA5CU,eAmDVC,cAnDU,CAmDOF,UAAU,CAACd,IAAX,CAAgBA,IAnDvB,CAoDViB,SApDU,CAoDEF,QAAQ,CAACf,IAAT,CAAcA,IApDhB,CAsDd;AAEA;AACIkB,UAzDU,CAyDGnB,SAAS,CAACG,GAAV,CAAc,SAAAC,MAAM,CAAI,CAEzCA,MAAM,CAACgB,QAAP,CAAkB,EAAlB,CACAhB,MAAM,CAACiB,KAAP,CAAe,EAAf,CAEAJ,cAAc,CAACK,OAAf,CAAuB,SAAAC,IAAI,CAAI,CAC3BL,SAAS,CAACI,OAAV,CAAkB,SAAAE,IAAI,CAAI,CACtB,GAAGpB,MAAM,CAACG,OAAP,GAAmBiB,IAAI,CAACZ,EAAxB,EAA8BR,MAAM,CAACC,OAAP,GAAmBkB,IAAI,CAACX,EAAzD,CAA6D,CACzDR,MAAM,CAACgB,QAAP,CAAkBG,IAAI,CAACA,IAAvB,CACAnB,MAAM,CAACiB,KAAP,CAAeG,IAAI,CAACH,KAApB,CACH,CACJ,CALD,EAMH,CAPD,EASA,GAAII,CAAAA,MAAM,CAAGrB,MAAM,CAACsB,aAAP,CAAqBC,OAArB,CAA6B,SAA7B,CAAwC,KAAxC,EAA+CA,OAA/C,CAAuD,UAAvD,CAAmE,KAAnE,CAAb,CACAvB,MAAM,CAACsB,aAAP,CAAuBD,MAAvB,CAEA,MAAOrB,CAAAA,MAAP,CACC,CAlBgB,CAzDH,CA6EdX,WAAW,CAAC0B,UAAD,CAAX,CA7Ec,uDAAH,kBAATzB,CAAAA,SAAS,0CAAf,CAgFAA,SAAS,GAEZ,CAnFQ,CAmFN,CAACL,MAAD,CAnFM,CAAT,CAqFA;AAEA,mBACI,2BAAK,SAAS,CAAC,EAAf,eACI,0BAAI,SAAS,CAAC,YAAd,+BADJ,cAEI,2BAAK,SAAS,CAAC,aAAf,EACKG,QAAQ,CAACW,GAAT,CAAa,SAACyB,OAAD,CAAUC,KAAV,qBACV,2BAAK,GAAG,CAAEA,KAAV,CAAiB,SAAS,CAAC,aAA3B,eACI,2BAAK,GAAG,CAAED,OAAO,CAACF,aAAlB,CAAiC,GAAG,CAAC,KAArC,CAA2C,SAAS,CAAC,UAArD,EADJ,cAGI,2BAAK,SAAS,CAAC,gBAAf,eACI,0BAAI,SAAS,CAAC,mBAAd,EAAmCE,OAAO,CAACE,SAA3C,CADJ,cAEI,yBAAG,SAAS,CAAC,mBAAb,eAA4CF,OAAO,CAACG,YAApD,CAFJ,cAII,oBAAC,IAAD,EACA,SAAS,CAAC,MADV,CAEA,EAAE,CAAE,CACJC,QAAQ,iBAAWJ,OAAO,CAACP,KAAnB,CADJ,CAFJ,eAMI,2BAAK,SAAS,CAAC,UAAf,cAAoCO,OAAO,CAACE,SAA5C,CANJ,CAJJ,CAHJ,CADU,EAAb,CADL,CAFJ,CADJ,CA0BH,CAvHD,CAyHA,cAAe1C,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Config from '../Config';\nimport { Link } from 'react-router-dom';\n\nconst TopStreams = () => {\n\n    const oToken = sessionStorage.getItem('theToken');\n\n    const [channels, setChannels] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await Axios.create({\n            headers: {\n                'Client-ID' : Config.clientID,\n                'Authorization' : 'Bearer ' + oToken\n            }\n            }).get('https://api.twitch.tv/helix/streams');\n\n            let dataArray = result.data.data;\n            // console.log(dataArray);\n\n            let gameIDs = dataArray.map( stream => {\n                return stream.game_id;\n            });\n\n            let userIDs = dataArray.map( stream => {\n                return stream.user_id;\n            });\n\n            //Creation des URLs personnalisées\n            let baseUrlGames = \"https://api.twitch.tv/helix/games?\"\n            let baseUrlUsers = \"https://api.twitch.tv/helix/users?\"\n\n            let queryParamsGame = \"\";\n            let queryParamsUsers = \"\";\n\n            gameIDs.map(id => {\n                return (queryParamsGame = queryParamsGame + `id=${id}&`)\n            });\n            userIDs.map(id => {\n                return (queryParamsUsers = queryParamsUsers + `id=${id}&`)\n            });\n\n            //URL final\n            let urlFinalGames = baseUrlGames + queryParamsGame;\n            let urlFinalUsers = baseUrlUsers + queryParamsUsers;\n\n            //Appels\n            let gamesNames = await Axios.create({\n            headers: {\n                'Client-ID' : Config.clientID,\n                'Authorization' : 'Bearer ' + oToken\n            }\n            }).get(urlFinalGames);\n            let getUsers = await Axios.create({\n            headers: {\n                'Client-ID' : Config.clientID,\n                'Authorization' : 'Bearer ' + oToken\n            }\n            }).get(urlFinalUsers);\n\n            let gamesNameArray = gamesNames.data.data;\n            let userArray = getUsers.data.data;\n\n            // console.log(gamesNameArray, userArray);\n\n            //Création du tableau final\n            let finalArray = dataArray.map(stream => {\n\n            stream.gameName = \"\";\n            stream.login = \"\";\n\n            gamesNameArray.forEach(name => {\n                userArray.forEach(user => {\n                    if(stream.user_id === user.id && stream.game_id === name.id) {\n                        stream.gameName = name.name;\n                        stream.login = user.login;\n                    }\n                })\n            });\n\n            let newUrl = stream.thumbnail_url.replace('{width}', \"320\").replace('{height}', \"180\");\n            stream.thumbnail_url = newUrl;\n\n            return stream\n            })\n\n            setChannels(finalArray);\n        }\n\n        fetchData();\n\n    }, [oToken])\n\n    // console.log(channels);\n\n    return(\n        <div className=\"\">\n            <h1 className=\"titreGames\">Stream les plus populaires</h1>\n            <div className=\"flexAccueil\">\n                {channels.map((channel, index) => ( \n                    <div key={index} className=\"carteStream\">\n                        <img src={channel.thumbnail_url} alt=\"jeu\" className=\"imgCarte\"/>\n\n                        <div className=\"cardBodyStream\">\n                            <h5 className=\"titreCartesStream\">{channel.user_name}</h5>\n                            <p className=\"txtStream viewers\">Viewers : {channel.viewer_count}</p>\n\n                            <Link\n                            className=\"lien\"\n                            to={{\n                            pathname: `/live/${channel.login}`\n                            }}\n                            >\n                                <div className=\"btnCarte\">Regarder {channel.user_name}</div>\n                            </Link>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default TopStreams;"]},"metadata":{},"sourceType":"module"}