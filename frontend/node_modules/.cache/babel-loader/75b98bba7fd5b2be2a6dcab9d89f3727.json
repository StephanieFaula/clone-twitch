{"ast":null,"code":"import _slicedToArray from\"/Users/oceane/Documents/Sites/clone-twitch/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import logo from\"./IconeTwitch.svg\";import search from\"./Search.svg\";import menuIco from\"./MenuIco.svg\";import{Link}from'react-router-dom';import Croix from\"./Croix.svg\";var Header=function Header(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),menu=_useState2[0],showMenu=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),smallScreen=_useState4[0],setSmallScreen=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),searchInput=_useState6[0],setSearchInput=_useState6[1];useEffect(function(){var mediaQuery=window.matchMedia(\"(max-width: 900px)\");//addListener = addEventListener pour mediaQuery en js\nmediaQuery.addListener(handleMediaQueryChange);handleMediaQueryChange(mediaQuery);return function(){mediaQuery.removeListener(handleMediaQueryChange);};});var handleMediaQueryChange=function handleMediaQueryChange(mediaQuery){if(mediaQuery.matches){setSmallScreen(true);}else{setSmallScreen(false);}};var toggleNavRes=function toggleNavRes(){showMenu(!menu);};var hideMenu=function hideMenu(){if(menu===true){showMenu(!menu);}};var handleSubmit=function handleSubmit(e){e.preventDefault();};var handleKeyPress=function handleKeyPress(e){setSearchInput(e.target.value);};return/*#__PURE__*/React.createElement(\"div\",{className:\"headerTop\"},/*#__PURE__*/React.createElement(\"nav\",null,(menu||!smallScreen)&&/*#__PURE__*/React.createElement(\"ul\",{className:\"listeMenu\"},/*#__PURE__*/React.createElement(\"li\",{onClick:hideMenu,className:\"liensNav\"},/*#__PURE__*/React.createElement(Link,{className:\"lien\",to:\"/\"},/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"logo-twitch\",className:\"logo\"}))),/*#__PURE__*/React.createElement(\"li\",{onClick:hideMenu,className:\"liensNav\"},/*#__PURE__*/React.createElement(Link,{className:\"lien\",to:\"/\"},\"Top Games\")),/*#__PURE__*/React.createElement(\"li\",{onClick:hideMenu,className:\"liensNav\"},/*#__PURE__*/React.createElement(Link,{className:\"lien\",to:\"/top-streams\"},\"Top Streams\")),/*#__PURE__*/React.createElement(\"li\",{className:\"liensNav\"},/*#__PURE__*/React.createElement(\"form\",{onClick:handleSubmit,className:\"formSubmit\"},/*#__PURE__*/React.createElement(\"input\",{required:true,value:searchInput,onChange:function onChange(e){return handleKeyPress(e);},type:\"text\",className:\"inputRecherche\"}),/*#__PURE__*/React.createElement(Link,{className:\"lien\",to:{pathname:\"/resultats/\".concat(searchInput)}},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},/*#__PURE__*/React.createElement(\"img\",{src:search,alt:\"icone loupe\",className:\"logoLoupe\"}))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"menuResBtn\"},/*#__PURE__*/React.createElement(\"img\",{onClick:toggleNavRes,src:!menu?menuIco:Croix,alt:\"icone menu\",className:\"menuIco\"})));};export default Header;","map":{"version":3,"sources":["/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/Header/index.js"],"names":["React","useState","useEffect","Link","Header","menu","showMenu","smallScreen","setSmallScreen","searchInput","setSearchInput","mediaQuery","window","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","toggleNavRes","hideMenu","handleSubmit","e","preventDefault","handleKeyPress","target","value","logo","pathname","search","menuIco","Croix"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './IconeTwitch.svg';\nimport search from './Search.svg';\nimport menuIco from './MenuIco.svg';\nimport { Link } from 'react-router-dom';\nimport Croix from './Croix.svg'\n\nconst Header = () => {\n\n    const [menu, showMenu] = useState(false);\n    const [smallScreen, setSmallScreen] = useState(false);\n    const [searchInput, setSearchInput] = useState('');\n\n    useEffect(() => {\n        const mediaQuery = window.matchMedia(\"(max-width: 900px)\");\n\n        //addListener = addEventListener pour mediaQuery en js\n        mediaQuery.addListener(handleMediaQueryChange);\n\n        handleMediaQueryChange(mediaQuery);\n\n        return () => {\n            mediaQuery.removeListener(handleMediaQueryChange);\n        }\n    });\n\n    const handleMediaQueryChange = mediaQuery => {\n        if(mediaQuery.matches) {\n            setSmallScreen(true);\n        } else {\n            setSmallScreen(false);\n        }\n    }\n\n    const toggleNavRes = () => {\n        showMenu(!menu);\n    }\n\n    const hideMenu = () => {\n        if (menu === true) {\n            showMenu(!menu);\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    const handleKeyPress = (e) => {\n        setSearchInput(e.target.value);\n    }\n\n    return(\n        <div className=\"headerTop\">\n            <nav>\n                {(menu || !smallScreen) && \n                    <ul className=\"listeMenu\">\n                        <li onClick={hideMenu} className=\"liensNav\">\n                            <Link className=\"lien\" to=\"/\">\n                                <img src={logo} alt=\"logo-twitch\" className=\"logo\"/>\n                            </Link> \n                        </li>\n                        <li onClick={hideMenu} className=\"liensNav\">\n                            <Link className=\"lien\" to=\"/\">\n                                Top Games\n                            </Link>\n                        </li>\n                        <li onClick={hideMenu} className=\"liensNav\">\n                            <Link className=\"lien\" to=\"/top-streams\">\n                                Top Streams\n                            </Link>\n                        </li>\n                        <li className=\"liensNav\">\n                            <form onClick={handleSubmit} className=\"formSubmit\">\n                                <input required value={searchInput} onChange={(e) => handleKeyPress(e)} type=\"text\" className=\"inputRecherche\"/>\n\n                                <Link\n                                className=\"lien\"\n                                to={{\n                                    pathname: `/resultats/${searchInput}`\n                                }}\n                                >\n                                    <button type=\"submit\">\n                                    <img src={search} alt=\"icone loupe\" className=\"logoLoupe\"/>\n                                    </button>\n                                </Link>\n                            </form>\n                        </li>\n                    </ul>\n                }\n            </nav>\n\n            <div className=\"menuResBtn\">\n                <img onClick={toggleNavRes} src={!menu ? menuIco : Croix} alt=\"icone menu\" className=\"menuIco\"/>\n            </div>\n        </div>\n    )\n};\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}