{"ast":null,"code":"import _regeneratorRuntime from\"/Users/oceane/Documents/Sites/clone-twitch/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/oceane/Documents/Sites/clone-twitch/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/oceane/Documents/Sites/clone-twitch/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ReactTwitchEmbedVideo from'react-twitch-embed-video';import{useParams}from'react-router-dom';import Config from'../Config';import Axios from'axios';var Live=function Live(){//Le destructuring consiste à assigner des variables provenant d'un objet ou tableau en reposant sur leur structure. Ici slug vaut {slug: PseudoDuJoueur}, on recupère simplement la valeur de la propriété slug (grace aux {} autour de slug) pour avoir UNIQUEMENT la valeur: le slug\nvar _useParams=useParams(),slug=_useParams.slug;// console.log(slug);\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),infoStream=_useState2[0],setInfoStream=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),infoGame=_useState4[0],setInfoGame=_useState4[1];var oToken=sessionStorage.getItem('theToken');useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,gameID,resultNomGame,nomJeu;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.create({headers:{'Client-ID':Config.clientID,'Authorization':'Bearer '+oToken}}).get(\"https://api.twitch.tv/helix/streams?user_login=\".concat(slug));case 2:result=_context.sent;if(!(result.data.data.length===0)){_context.next=7;break;}setInfoStream(false);_context.next=14;break;case 7:gameID=result.data.data.map(function(gameid){return gameid.game_id;});_context.next=10;return Axios.create({headers:{'Client-ID':Config.clientID,'Authorization':'Bearer '+oToken}}).get(\"https://api.twitch.tv/helix/games?id=\".concat(gameID));case 10:resultNomGame=_context.sent;// console.log(resultNomGame);\nnomJeu=resultNomGame.data.data.map(function(gameName){return gameName.name;});setInfoGame(nomJeu);setInfoStream(result.data.data[0]);// console.log(result);\ncase 14:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[slug,oToken]);//&nbsp = espace en html\nreturn infoStream?/*#__PURE__*/React.createElement(\"div\",{className:\"containerDecale\"},/*#__PURE__*/React.createElement(ReactTwitchEmbedVideo,{height:\"754\",width:\"100%\",channel:slug}),/*#__PURE__*/React.createElement(\"div\",{className:\"contInfo\"},/*#__PURE__*/React.createElement(\"div\",{className:\"titreStream\"},infoStream.title),/*#__PURE__*/React.createElement(\"div\",{className:\"viewer\"},\"Viewers : \",infoStream.viewer_count),/*#__PURE__*/React.createElement(\"div\",{className:\"infoGame\"},\"Streamer : \",infoStream.user_name,\", \\xA0 Langue : \",infoStream.language),/*#__PURE__*/React.createElement(\"div\",{className:\"nomJeu\"},\"Jeu : \",infoGame))):/*#__PURE__*/React.createElement(\"div\",{className:\"containerDecale\"},/*#__PURE__*/React.createElement(ReactTwitchEmbedVideo,{height:\"754\",width:\"100%\",channel:slug}),/*#__PURE__*/React.createElement(\"div\",{className:\"contInfo\"},/*#__PURE__*/React.createElement(\"div\",{className:\"titreStream\"},\"Le streamer est offline !\")));};export default Live;","map":{"version":3,"sources":["/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/Live/index.js"],"names":["React","useState","useEffect","ReactTwitchEmbedVideo","useParams","Config","Axios","Live","slug","infoStream","setInfoStream","infoGame","setInfoGame","oToken","sessionStorage","getItem","fetchData","create","headers","clientID","get","result","data","length","gameID","map","gameid","game_id","resultNomGame","nomJeu","gameName","name","title","viewer_count","user_name","language"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactTwitchEmbedVideo from 'react-twitch-embed-video';\nimport { useParams } from 'react-router-dom';\nimport Config from '../Config';\nimport Axios from 'axios';\n\nconst Live = () => {\n\n    //Le destructuring consiste à assigner des variables provenant d'un objet ou tableau en reposant sur leur structure. Ici slug vaut {slug: PseudoDuJoueur}, on recupère simplement la valeur de la propriété slug (grace aux {} autour de slug) pour avoir UNIQUEMENT la valeur: le slug\n    let {slug} = useParams();\n    // console.log(slug);\n\n    const [infoStream, setInfoStream] = useState([]);\n    const [infoGame, setInfoGame] = useState([]);\n\n    const oToken = sessionStorage.getItem('theToken');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await Axios.create({\n                headers: {\n                    'Client-ID' : Config.clientID,\n                    'Authorization' : 'Bearer ' + oToken\n                }\n            }).get(`https://api.twitch.tv/helix/streams?user_login=${slug}`);\n\n            if(result.data.data.length === 0) {\n                setInfoStream(false)\n            } else {\n                let gameID = result.data.data.map( gameid => {\n                    return gameid.game_id\n                });\n                const resultNomGame = await Axios.create({\n                headers: {\n                    'Client-ID' : Config.clientID,\n                    'Authorization' : 'Bearer ' + oToken\n                }\n                }).get(`https://api.twitch.tv/helix/games?id=${gameID}`);\n                // console.log(resultNomGame);\n                let nomJeu = resultNomGame.data.data.map(gameName => {\n                    return gameName.name\n                });\n\n                setInfoGame(nomJeu);\n                setInfoStream(result.data.data[0])\n                // console.log(result);\n            }\n        }\n\n        fetchData();\n    }, [slug, oToken])\n\n    //&nbsp = espace en html\n    return(\n        infoStream ?\n            <div className=\"containerDecale\">\n                <ReactTwitchEmbedVideo height=\"754\" width=\"100%\" channel={slug}/>\n                <div className=\"contInfo\">\n                    <div className=\"titreStream\">{infoStream.title}</div>\n                    <div className=\"viewer\">Viewers : {infoStream.viewer_count}</div>\n                    <div className=\"infoGame\">Streamer : {infoStream.user_name}, &nbsp; Langue : {infoStream.language}</div>\n                    <div className=\"nomJeu\">Jeu : {infoGame}</div>\n                </div>\n            </div>\n        :\n            <div className=\"containerDecale\">\n                <ReactTwitchEmbedVideo height=\"754\" width=\"100%\" channel={slug}/>\n                <div className=\"contInfo\">\n                    <div className=\"titreStream\">Le streamer est offline !</div>\n                </div>\n            </div>\n\n    );\n}\n\nexport default Live;"]},"metadata":{},"sourceType":"module"}