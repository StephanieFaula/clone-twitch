{"ast":null,"code":"var _jsxFileName = \"/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/Resultats/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport Config from '../Config';\nimport { Link, useParams } from 'react-router-dom';\n\nconst Resultats = () => {\n  const oToken = sessionStorage.getItem('theToken');\n  let {\n    slug\n  } = useParams();\n  const [result, setResult] = useState(true);\n  const [streamerInfo, setStreamerInfo] = useState([]); //Ici, on remplace tous les espace vides par rien du tout: '' PLUS DESPACE VIDE\n\n  let cleanSearch = slug.replace(/ /g, '');\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await Axios.create({\n        headers: {\n          'Client-ID': Config.clientID,\n          'Authorization': 'Bearer ' + oToken\n        }\n      }).get(`https://api.twitch.tv/helix/users?login=${cleanSearch}`); // console.log(result);\n\n      setStreamerInfo(result.data.data);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerDecaleResultats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Resultats de la recherche : \"), streamerInfo.map((stream, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"carteResultats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"imgCarte\",\n    src: stream.profile_image_url,\n    alt: \"resultat image profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardBodyResults\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"titreCartesStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, stream.display_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"txtResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, stream.description), /*#__PURE__*/React.createElement(Link, {\n    className: \"lien\",\n    to: {\n      pathname: `/live/${stream.login}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btnCarte btnResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, \"Regarder \", stream.display_name))))));\n};\n\nexport default Resultats;","map":{"version":3,"sources":["/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/Resultats/index.js"],"names":["React","useState","useEffect","Axios","Config","Link","useParams","Resultats","oToken","sessionStorage","getItem","slug","result","setResult","streamerInfo","setStreamerInfo","cleanSearch","replace","fetchData","create","headers","clientID","get","data","map","stream","index","profile_image_url","display_name","description","pathname","login"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB,QAAMC,MAAM,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAf;AAEA,MAAI;AAACC,IAAAA;AAAD,MAASL,SAAS,EAAtB;AAEA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD,CAPoB,CASpB;;AACA,MAAIe,WAAW,GAAGL,IAAI,CAACM,OAAL,CAAa,IAAb,EAAkB,EAAlB,CAAlB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,SAAS,GAAG,YAAY;AAC1B,YAAMN,MAAM,GAAG,MAAMT,KAAK,CAACgB,MAAN,CAAa;AAC9BC,QAAAA,OAAO,EAAE;AACL,uBAAchB,MAAM,CAACiB,QADhB;AAEL,2BAAkB,YAAYb;AAFzB;AADqB,OAAb,EAKlBc,GALkB,CAKb,2CAA0CN,WAAY,EALzC,CAArB,CAD0B,CAQ1B;;AAEAD,MAAAA,eAAe,CAACH,MAAM,CAACW,IAAP,CAAYA,IAAb,CAAf;AACH,KAXD;;AAYAL,IAAAA,SAAS;AACZ,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEKJ,YAAY,CAACU,GAAb,CAAiB,CAACC,MAAD,EAASC,KAAT,kBACd;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAED,MAAM,CAACE,iBAAtC;AAAyD,IAAA,GAAG,EAAC,wBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCF,MAAM,CAACG,YAA1C,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,MAAM,CAACI,WADZ,CAFJ,eAKI,oBAAC,IAAD;AACA,IAAA,SAAS,EAAC,MADV;AAEA,IAAA,EAAE,EAAE;AACAC,MAAAA,QAAQ,EAAG,SAAQL,MAAM,CAACM,KAAM;AADhC,KAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8CN,MAAM,CAACG,YAArD,CANJ,CALJ,CAHJ,CADH,CAFL,CADJ;AAyBH,CArDD;;AAuDA,eAAerB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport Config from '../Config';\nimport { Link, useParams } from 'react-router-dom';\n\nconst Resultats = () => {\n\n    const oToken = sessionStorage.getItem('theToken');\n\n    let {slug} = useParams();\n\n    const [result, setResult] = useState(true);\n    const [streamerInfo, setStreamerInfo] = useState([]);\n\n    //Ici, on remplace tous les espace vides par rien du tout: '' PLUS DESPACE VIDE\n    let cleanSearch = slug.replace(/ /g,'');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await Axios.create({\n                headers: {\n                    'Client-ID' : Config.clientID,\n                    'Authorization' : 'Bearer ' + oToken\n                }\n            }).get(`https://api.twitch.tv/helix/users?login=${cleanSearch}`);\n\n            // console.log(result);\n\n            setStreamerInfo(result.data.data);\n        }\n        fetchData()\n    }, [])\n\n    return(\n        <div className=\"containerDecaleResultats\">\n            <h4>Resultats de la recherche : </h4>\n            {streamerInfo.map((stream, index) => (\n                <div key={index} className=\"carteResultats\">\n                    <img className=\"imgCarte\" src={stream.profile_image_url} alt=\"resultat image profile\"/>\n\n                    <div className=\"cardBodyResults\">\n                        <h5 className=\"titreCartesStream\">{stream.display_name}</h5>\n                        <div className=\"txtResult\">\n                            {stream.description}\n                        </div>\n                        <Link\n                        className=\"lien\"\n                        to={{\n                            pathname: `/live/${stream.login}`\n                        }}\n                        >\n                            <div className=\"btnCarte btnResult\">Regarder {stream.display_name}</div>\n                        </Link>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Resultats;"]},"metadata":{},"sourceType":"module"}