{"ast":null,"code":"var _jsxFileName = \"/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/GameStreams/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Axios from 'axios';\nimport Config from '../Config';\nimport { Link } from 'react-router-dom';\n\nconst GameStreams = () => {\n  let {\n    slug\n  } = useParams();\n  const [streamData, setStreamData] = useState([]);\n  const [viewers, setViewers] = useState(0);\n  const oToken = sessionStorage.getItem('theToken');\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchIdGame = await Axios.create({\n        headers: {\n          'Client-ID': Config.clientID,\n          'Authorization': 'Bearer ' + oToken\n        }\n      }).get(`https://api.twitch.tv/helix/games?name=${slug}`); // console.log(fetchIdGame);\n\n      let idGame = fetchIdGame.data.data[0].id; // console.log(idGame);\n\n      const result = await Axios.create({\n        headers: {\n          'Client-ID': Config.clientID,\n          'Authorization': 'Bearer ' + oToken\n        }\n      }).get(`https://api.twitch.tv/helix/streams?game_id=${idGame}`); // console.log(result);\n\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(stream => {\n        let newURL = stream.thumbnail_url.replace('{width}', '320').replace('{height}', '180');\n        stream.thumbnail_url = newURL;\n        return stream;\n      }); //Calcul du total des viewers\n      //La méthode reduce() applique une fonction qui est un « accumulateur » et qui traite chaque valeur d'une liste (de la gauche vers la droite) afin de la réduire à une seule valeur.\n\n      let totalViewers = finalArray.reduce((acc, val) => {\n        return acc + val.viewer_count;\n      }, 0);\n      let userIDs = dataArray.map(stream => {\n        return stream.user_id;\n      });\n      let baseUrl = \"https://api.twitch.tv/helix/users?\";\n      let queryParamsUsers = \"\";\n      userIDs.map(id => {\n        return queryParamsUsers = queryParamsUsers + `id=${id}&`;\n      });\n      let finalUrl = baseUrl + queryParamsUsers;\n      let getUsersLogin = await Axios.create({\n        headers: {\n          'Client-ID': Config.clientID,\n          'Authorization': 'Bearer ' + oToken\n        }\n      }).get(finalUrl);\n      let userLoginArray = getUsersLogin.data.data;\n      finalArray = dataArray.map(stream => {\n        stream.login = \"\";\n        userLoginArray.forEach(login => {\n          if (stream.user_id === login.id) {\n            stream.login = login.login;\n          }\n        });\n        return stream;\n      });\n      setViewers(totalViewers);\n      setStreamData(finalArray);\n    };\n\n    fetchData();\n  }, []);\n  console.log(streamData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"titreGamesStreams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Stream : \", slug), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"sousTitreGameStreams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"textColored\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, viewers), \" personnes regardent \", slug), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexAccueil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, streamData.map((stream, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"carteGameStreams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: stream.thumbnail_url,\n    alt: \"jeu carte image\",\n    className: \"imgCarte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardBodyGameStreams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"titreCartesStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, stream.user_name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txtStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, \"Nombre de viewers : \", stream.viewer_count), /*#__PURE__*/React.createElement(Link, {\n    className: \"lien\",\n    to: {\n      pathname: `/live/${stream.login}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btnCarte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, \"Regarder \", stream.user_name)))))));\n};\n\nexport default GameStreams;","map":{"version":3,"sources":["/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/GameStreams/index.js"],"names":["React","useState","useEffect","useParams","Axios","Config","Link","GameStreams","slug","streamData","setStreamData","viewers","setViewers","oToken","sessionStorage","getItem","fetchData","fetchIdGame","create","headers","clientID","get","idGame","data","id","result","dataArray","finalArray","map","stream","newURL","thumbnail_url","replace","totalViewers","reduce","acc","val","viewer_count","userIDs","user_id","baseUrl","queryParamsUsers","finalUrl","getUsersLogin","userLoginArray","login","forEach","console","log","index","user_name","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Axios from 'axios';\nimport Config from '../Config';\nimport { Link } from 'react-router-dom';\n\nconst GameStreams = () => {\n\n    let {slug} = useParams();\n\n    const [streamData, setStreamData] = useState([]);\n    const [viewers, setViewers] = useState(0);\n\n    const oToken = sessionStorage.getItem('theToken');\n\n    useEffect(() => {\n    const fetchData = async () => {\n        const fetchIdGame = await Axios.create({\n            headers: {\n                'Client-ID' : Config.clientID,\n                'Authorization' : 'Bearer ' + oToken\n            }\n        }).get(`https://api.twitch.tv/helix/games?name=${slug}`);\n\n        // console.log(fetchIdGame);\n\n        let idGame = fetchIdGame.data.data[0].id;\n\n        // console.log(idGame);\n\n        const result = await Axios.create({\n        headers: {\n            'Client-ID' : Config.clientID,\n            'Authorization' : 'Bearer ' + oToken\n        }\n        }).get(`https://api.twitch.tv/helix/streams?game_id=${idGame}`);\n        // console.log(result);\n\n        let dataArray = result.data.data;\n\n        let finalArray = dataArray.map(stream => {\n            let newURL = stream.thumbnail_url\n            .replace('{width}', '320')\n            .replace('{height}', '180');\n            stream.thumbnail_url = newURL;\n            return stream;\n        })\n\n        //Calcul du total des viewers\n\n        //La méthode reduce() applique une fonction qui est un « accumulateur » et qui traite chaque valeur d'une liste (de la gauche vers la droite) afin de la réduire à une seule valeur.\n        let totalViewers = finalArray.reduce((acc, val) => {\n            return acc + val.viewer_count;\n        }, 0)\n\n        let userIDs = dataArray.map(stream => {\n            return stream.user_id\n        })\n\n        let baseUrl = \"https://api.twitch.tv/helix/users?\";\n        let queryParamsUsers = \"\";\n\n        userIDs.map(id => {\n            return (queryParamsUsers = queryParamsUsers + `id=${id}&`)\n        });\n        let finalUrl = baseUrl + queryParamsUsers;\n\n        let getUsersLogin = await Axios.create({\n        headers: {\n            'Client-ID' : Config.clientID,\n            'Authorization' : 'Bearer ' + oToken\n        }\n        }).get(finalUrl);\n\n        let userLoginArray = getUsersLogin.data.data;\n\n        finalArray = dataArray.map(stream => {\n            stream.login = \"\";\n\n            userLoginArray.forEach(login => {\n            if(stream.user_id === login.id) {\n            stream.login = login.login\n            }\n            })\n\n            return stream;\n        })\n\n        setViewers(totalViewers);\n        setStreamData(finalArray);\n    }\n\n    fetchData();\n\n    }, [])\n\n    console.log(streamData);\n    return(\n        <div>\n            <h1 className=\"titreGamesStreams\">Stream : {slug}</h1>\n            <h3 className=\"sousTitreGameStreams\">\n                <strong className=\"textColored\">{viewers}</strong> personnes regardent {slug}\n            </h3>\n\n            <div className=\"flexAccueil\">\n                {streamData.map((stream, index) => ( \n                    <div key={index} className=\"carteGameStreams\">\n                        <img src={stream.thumbnail_url} alt=\"jeu carte image\" className=\"imgCarte\"/>\n                        <div className=\"cardBodyGameStreams\">\n                            <h5 className=\"titreCartesStream\">{stream.user_name}</h5>\n                            <p className=\"txtStream\">Nombre de viewers : {stream.viewer_count}</p>\n\n                            <Link\n                            className=\"lien\"\n                            to={{\n                                pathname: `/live/${stream.login}`\n                            }}>\n                                <div className=\"btnCarte\">Regarder {stream.user_name}</div>\n                            </Link>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default GameStreams;"]},"metadata":{},"sourceType":"module"}