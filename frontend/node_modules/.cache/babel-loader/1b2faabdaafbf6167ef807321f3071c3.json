{"ast":null,"code":"var _jsxFileName = \"/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/Sidebar/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Config from '../Config';\n\nconst Sidebar = () => {\n  const oToken = sessionStorage.getItem('theToken');\n  const [topStreams, setTopStreams] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await Axios.create({\n        headers: {\n          'Client-ID': Config.clientID,\n          'Authorization': 'Bearer ' + oToken\n        }\n      }).get('https://api.twitch.tv/helix/streams');\n      let dataArray = result.data.data; // console.log(dataArray);\n\n      let gameIDs = dataArray.map(stream => {\n        return stream.game_id;\n      });\n      let userIDs = dataArray.map(stream => {\n        return stream.user_id;\n      }); //Creation des URLs personnalisées\n\n      let baseUrlGames = \"https://api.twitch.tv/helix/games?\";\n      let baseUrlUsers = \"https://api.twitch.tv/helix/users?\";\n      let queryParamsGame = \"\";\n      let queryParamsUsers = \"\";\n      gameIDs.map(id => {\n        return queryParamsGame = queryParamsGame + `id=${id}&`;\n      });\n      userIDs.map(id => {\n        return queryParamsUsers = queryParamsUsers + `id=${id}&`;\n      }); //URL final\n\n      let urlFinalGames = baseUrlGames + queryParamsGame;\n      let urlFinalUsers = baseUrlUsers + queryParamsUsers; //Appels\n\n      let gamesNames = await Axios.create({\n        headers: {\n          'Client-ID': Config.clientID,\n          'Authorization': 'Bearer ' + oToken\n        }\n      }).get(urlFinalGames);\n      let getUsers = await Axios.create({\n        headers: {\n          'Client-ID': Config.clientID,\n          'Authorization': 'Bearer ' + oToken\n        }\n      }).get(urlFinalUsers);\n      let gamesNameArray = gamesNames.data.data;\n      let userArray = getUsers.data.data; // console.log(gamesNameArray, userArray);\n      //Création du tableau final\n\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        stream.truePic = \"\";\n        stream.login = \"\";\n        gamesNameArray.forEach(name => {\n          userArray.forEach(user => {\n            if (stream.user_id === user.id && stream.game_id === name.id) {\n              stream.gameName = name.name;\n              stream.truePic = user.profile_image_url;\n              stream.login = user.login;\n            }\n          });\n        });\n        return stream;\n      });\n      setTopStreams(finalArray.slice(0, 6));\n    };\n\n    fetchData();\n  }, []); // console.log(topStreams);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"titreSidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 2\n    }\n  }, \"Chaines recommand\\xE9es\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"listeStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 2\n    }\n  }, topStreams.map((stream, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"containerFlexSidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: stream.truePic,\n    className: \"profilePicRonde\",\n    alt: \"logo user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 2\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"streamUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 2\n    }\n  }, stream.user_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"viewerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pointRouge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 2\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 2\n    }\n  }, stream.viewer_count)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gameNameSidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 2\n    }\n  }, stream.gameName)))));\n};\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/oceane/Documents/Sites/clone-twitch/frontend/src/components/Sidebar/index.js"],"names":["React","useEffect","useState","Axios","Config","Sidebar","oToken","sessionStorage","getItem","topStreams","setTopStreams","fetchData","result","create","headers","clientID","get","dataArray","data","gameIDs","map","stream","game_id","userIDs","user_id","baseUrlGames","baseUrlUsers","queryParamsGame","queryParamsUsers","id","urlFinalGames","urlFinalUsers","gamesNames","getUsers","gamesNameArray","userArray","finalArray","gameName","truePic","login","forEach","name","user","profile_image_url","slice","index","user_name","viewer_count"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Config from '../Config';\n\nconst Sidebar = () => {\n\n const oToken = sessionStorage.getItem('theToken');\n\n const [topStreams, setTopStreams] = useState([]);\n\n useEffect(() => {\n const fetchData = async () => {\n const result = await Axios.create({\n headers: {\n 'Client-ID' : Config.clientID,\n 'Authorization' : 'Bearer ' + oToken\n }\n }).get('https://api.twitch.tv/helix/streams');\n\n let dataArray = result.data.data;\n // console.log(dataArray);\n\n let gameIDs = dataArray.map( stream => {\n return stream.game_id;\n });\n\n let userIDs = dataArray.map( stream => {\n return stream.user_id;\n });\n\n //Creation des URLs personnalisées\n let baseUrlGames = \"https://api.twitch.tv/helix/games?\"\n let baseUrlUsers = \"https://api.twitch.tv/helix/users?\"\n\n let queryParamsGame = \"\";\n let queryParamsUsers = \"\";\n\n gameIDs.map(id => {\n return (queryParamsGame = queryParamsGame + `id=${id}&`)\n });\n userIDs.map(id => {\n return (queryParamsUsers = queryParamsUsers + `id=${id}&`)\n });\n\n //URL final\n let urlFinalGames = baseUrlGames + queryParamsGame;\n let urlFinalUsers = baseUrlUsers + queryParamsUsers;\n\n //Appels\n let gamesNames = await Axios.create({\n headers: {\n 'Client-ID' : Config.clientID,\n 'Authorization' : 'Bearer ' + oToken\n }\n }).get(urlFinalGames);\n let getUsers = await Axios.create({\n headers: {\n 'Client-ID' : Config.clientID,\n 'Authorization' : 'Bearer ' + oToken\n }\n }).get(urlFinalUsers);\n\n let gamesNameArray = gamesNames.data.data;\n let userArray = getUsers.data.data;\n\n // console.log(gamesNameArray, userArray);\n\n //Création du tableau final\n let finalArray = dataArray.map(stream => {\n\n stream.gameName = \"\";\n stream.truePic = \"\";\n stream.login = \"\";\n\n gamesNameArray.forEach(name => {\n userArray.forEach(user => {\n if(stream.user_id === user.id && stream.game_id === name.id) {\n stream.gameName = name.name;\n stream.truePic = user.profile_image_url;\n stream.login = user.login;\n }\n })\n });\n\n return stream\n })\n\n setTopStreams(finalArray.slice(0,6));\n\n }\n\n fetchData();\n }, [])\n\n // console.log(topStreams);\n\n return(\n <div className=\"sidebar\">\n <h2 className=\"titreSidebar\">Chaines recommandées</h2>\n <ul className=\"listeStream\">\n {topStreams.map((stream, index) => (\n <li key={index} className=\"containerFlexSidebar\">\n <img src={stream.truePic} className=\"profilePicRonde\" alt=\"logo user\"/>\n <div className=\"streamUser\">\n {stream.user_name}\n </div>\n <div className=\"viewerRight\">\n <div className=\"pointRouge\"></div>\n <div>{stream.viewer_count}</div>\n </div>\n <div className=\"gameNameSidebar\">\n {stream.gameName}\n </div>\n </li>\n ))}\n </ul>\n </div>\n )\n}\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}